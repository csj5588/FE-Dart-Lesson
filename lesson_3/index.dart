main() {
  // num 数值类型 Object
  // int 整型  整数类型 负整数  0  正整数
  // int a  = -1;
  // print(a);
  // double 类型 双精度浮点类型 属性和方法
  // IEEE 754标准定制 javascript
  // double a = -1.1;
  // 0.1 + 0.2 !== 0.3
  // print(23.6 - 23);
  // 64位双精度浮点类型  32位
  // 1符号位 11指数位 52尾数
  // 12 / 2 / 2   1100

  // 1.10011001100（1100） * 2^-4
  // 1.10011001100（1100） * 2^-3

  // 0.1 * 2 = 0.2
  // 0.2 * 2 = 0.4
  // 0.4 * 2 = 0.8
  // 0.8 * 2 = 1.6
  // 0.6 * 2 = 1.2
  // 0.2 * 2 = 0.4

  // 0.110011001100（1100） * 2^-3
  // 1.10011001100（1100） * 2^-3

  // 二进制舍入的规则 10进制 四舍五入，就近舍入，偶数舍入  11.5。

  // 自己做精度收拢, > < 业务中

  // num类型的属性及方法
  // int a = 1;
  // print(a.toDouble());
  // 整数都是有限的 0 无限趋近于0的数

  // String 字符串类型
  // 三种形式
  // String a = 'a' 'b' 'c';
  // String b = 'b';

  // 字符串拼接 相邻拼接 $ ${expression}
  // print('$a ${a + b}');
  // Dart 2.0

  // String a = 'abc';
  // String b = 'abc';
  // print(a);

  // bool true false
  // bool a = true;
  // print(a.compareTo(b)); // 相等0 1 -1

  // hash 数据摘要算法 -// 压缩
  // 哈希表   哈希表排序 -> 空间换时间排序算法
  // [2, 3 ,1 ,8, 8]
  // 1  2 3        8*2
  // hashCode, equals hashCode
}